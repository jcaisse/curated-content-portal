name: Crawler Moderation Pipeline

on:
  push:
    branches:
      - feat/crawler-moderation
  pull_request:
    branches:
      - main

env:
  NODE_VERSION: 20
  REGISTRY: ghcr.io/${{ github.repository }}

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - run: npm ci
      - run: npm run lint -- --max-warnings=0
      - run: npm run ts:check
      - run: npm run test

  integration-e2e:
    needs: lint-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - run: npm ci
      - name: Start services
        run: |
          npm run compose:up
          sleep 30
      - name: Run Playwright e2e
        run: |
          npx playwright install --with-deps
          npm run e2e:all
      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report
      - name: Stop services
        if: always()
        run: npm run compose:down

  docker-build:
    needs: integration-e2e
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY }}:commit-${{ github.sha }}
          build-args: |
            GIT_COMMIT_SHA=${{ github.sha }}

  deploy:
    needs: docker-build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Trigger deployment workflow
        uses: peter-evans/workflow-dispatch@v1
        with:
          token: ${{ secrets.DEPLOY_TOKEN }}
          repository: ${{ github.repository }}
          workflow: deploy.yml
          ref: main



