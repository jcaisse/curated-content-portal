name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: pgvector/pgvector:pg16
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: curated_content_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Architecture lock checks
      run: |
        echo "üîí Running architecture lock validation..."
        npm run check:arch
        npm run check:pgvector
        echo "‚úÖ Architecture lock checks passed!"

    - name: Security checks
      run: |
        echo "üîí Running security validation..."
        npm run check:secrets
        echo "‚úÖ Security checks passed!"

    - name: TODO/FIXME check
      run: |
        echo "üìã Checking for TODOs/FIXMEs..."
        npm run check:todos check
        echo "‚úÖ TODO/FIXME checks passed!"

    - name: Generate Prisma client
      run: npx prisma generate
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/curated_content_test

    - name: Run database migrations
      run: npx prisma migrate deploy
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/curated_content_test

    - name: Type check
      run: npm run type-check

    - name: Lint
      run: npm run lint

    - name: Check for Mock Data
      run: |
        # Check for mock data patterns, excluding comments and CSS classes
        if grep -r -i 'lorem\|ipsum' src/ --exclude-dir=node_modules --exclude='*.css' | grep -v '//' | grep -v 'placeholder:text-muted-foreground'; then
          echo "‚ùå Mock data detected in source code. Remove all placeholder/mock data."
          exit 1
        elif grep -r 'admin123\|your-.*-key' src/ --exclude-dir=node_modules | grep -v '//' | grep -v 'TODO:'; then
          echo "‚ùå Mock data detected in source code. Remove all placeholder/mock data."
          exit 1
        else
          echo "‚úÖ No mock data found in source code."
        fi

    - name: Run unit tests
      run: npm run test
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/curated_content_test
        NEXTAUTH_SECRET: test-secret
        NEXTAUTH_URL: http://localhost:3000
        OPENAI_API_KEY: test-key
        ADMIN_INGEST_KEY: test-admin-key
        DOMAIN: localhost
        EMAIL: test@example.com

    - name: Install Playwright Browsers
      run: npx playwright install --with-deps chromium

    - name: Build application
      run: npm run build
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/curated_content_test
        NEXTAUTH_SECRET: test-secret
        NEXTAUTH_URL: http://localhost:3000
        OPENAI_API_KEY: test-key
        ADMIN_INGEST_KEY: test-admin-key
        DOMAIN: localhost
        EMAIL: test@example.com

    - name: Run Playwright tests
      run: npm run test:e2e
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/curated_content_test
        NEXTAUTH_SECRET: test-secret
        NEXTAUTH_URL: http://localhost:3000
        OPENAI_API_KEY: test-key
        ADMIN_INGEST_KEY: test-admin-key
        DOMAIN: localhost
        EMAIL: test@example.com

    - name: Upload Playwright Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30
