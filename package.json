{
  "name": "curated-content-portal",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start -p ${PORT:-3000}",
    "lint": "next lint",
    "lint:mock-data": "grep -r -i 'lorem\\|ipsum\\|mock\\|fake\\|placeholder\\|admin123\\|your-.*-key' src/ --exclude-dir=node_modules || true",
    "type-check": "tsc --noEmit",
    "db:migrate": "docker compose --env-file ./.secrets/.env.local exec app node node_modules/.bin/prisma migrate deploy",
    "db:push": "prisma db push",
    "db:generate": "prisma generate",
    "db:studio": "prisma studio",
    "seed": "ts-node prisma/seed.ts",
    "crawl": "ts-node scripts/crawl.ts",
    "curate": "ts-node scripts/curate.ts",
    "test": "vitest run --exclude='tests/e2e/**'",
    "test:watch": "vitest",
    "test:e2e": "playwright test",
    "test:e2e:ui": "playwright test --ui",
    "docker:build": "docker build -t curated-content-portal .",
    "docker:test": "docker build -f Dockerfile.test -t curated-content-portal:test .",
    "validate:config": "node scripts/validate-config.js",
    "phase0:gate": "npm run validate:config",
    "export:sqlite": "ts-node scripts/sqlite_export.ts",
    "import:pg": "ts-node scripts/sqlite_to_pg.ts",
    "check:arch": "node scripts/validate-architecture.js",
    "check:pgvector": "node scripts/validate-pgvector.js",
    "check:all": "npm run check:arch && npm run check:pgvector",
    "check:secrets": "node scripts/check-secrets.mjs",
    "check:todos": "node scripts/list-todos.mjs",
    "secrets:gen": "node scripts/gensecret.mjs",
    "secrets:rotate:dev": "bash scripts/rotate-secrets.sh dev",
    "migrate:deploy": "prisma migrate deploy",
    "e2e:setup": "ts-node scripts/e2e-seed.ts",
    "e2e:ui": "playwright test tests/e2e/keywords-ui.spec.ts --reporter=line",
    "e2e:ai": "playwright test tests/e2e/keywords-ai.spec.ts --reporter=line",
    "e2e:all": "playwright test tests/e2e/keywords-*.spec.ts --reporter=html",
    "env:bootstrap": "node scripts/bootstrap-env.mjs",
    "env:check": "node scripts/check-env.mjs",
    "compose:validate": "node scripts/validate-compose-vars.mjs",
    "compose:rebuild": "docker compose --env-file ./.secrets/.env.local build --no-cache --pull",
    "compose:labels": "docker inspect $(docker compose images app --quiet) --format '{{json .Config.Labels}}'",
    "compose:up": "docker compose --env-file ./.secrets/.env.local up -d --force-recreate --remove-orphans",
    "compose:down": "docker compose down --remove-orphans",
    "db:seed": "docker compose exec app node node_modules/.bin/prisma db seed || true",
    "arch:lock": "node scripts/arch-lock.mjs",
    "ci:preflight": "node scripts/sop-selfcheck.mjs && npm run guard:no-musl && npm run guard:no-npx-prisma && npm run guard:tailwind && npm run migrations:validate && npm run ts:check",
    "ci:prove-image": "node scripts/guard-css-in-image.mjs cleanportal-app:latest && node scripts/validate-migrations-in-image.mjs cleanportal-app:latest",
    "ci:prove-db": "docker run --rm $(docker compose images app --quiet) node scripts/db-smoke.mjs",
    "build:image": "docker build --build-arg GIT_COMMIT_SHA=$(git rev-parse HEAD) -t cleanportal-app:latest .",
    "verify:image": "node scripts/verify-build.mjs",
    "prove:build": "npm run build:image && npm run verify:image",
    "auth:smoke": "node scripts/auth-smoke.mjs",
    "ts:check": "prisma generate && tsc --noEmit",
    "lint:strict": "eslint . --ext .ts,.tsx --max-warnings=0",
    "imports:validate": "node scripts/validate-alias.mjs",
    "auth:fpr:check": "node scripts/auth-fingerprint-check.mjs",
    "db:env:check": "node scripts/check-db-env.mjs",
    "db:smoke": "node scripts/db-smoke.mjs",
    "guard:no-state": "node scripts/no-state-writes.mjs",
    "guard:no-musl": "node scripts/guard-no-musl.mjs",
    "guard:no-npx-prisma": "node scripts/guard-no-npx-prisma.mjs",
    "guard:tailwind": "node scripts/guard-tailwind.mjs",
    "migrations:hash": "node scripts/migrations-hash.mjs",
    "migrations:validate": "node scripts/validate-prisma-migrations.mjs",
    "backfill:crawlers": "node scripts/backfill-crawler-data.mjs",
    "migrations:validate:image": "node scripts/validate-migrations-in-image.mjs $(docker compose images app --quiet)",
    "deploy:local": "bash ops/deploy.sh --env-file ./.secrets/.env.local",
    "deploy:staging": "ENVIRONMENT=staging bash ops/deploy.sh --env-file ./.secrets/.env.staging",
    "deploy:prod": "ENVIRONMENT=production bash ops/deploy.sh --env-file ./.secrets/.env.production",
    "prepare": "husky"
  },
  "dependencies": {
    "@auth/prisma-adapter": "^2.7.4",
    "@hookform/resolvers": "^3.9.1",
    "@prisma/client": "^5.22.0",
    "@radix-ui/react-alert-dialog": "^1.1.2",
    "@radix-ui/react-avatar": "^1.1.1",
    "@radix-ui/react-checkbox": "^1.1.2",
    "@radix-ui/react-dialog": "^1.1.2",
    "@radix-ui/react-dropdown-menu": "^2.1.2",
    "@radix-ui/react-icons": "^1.3.0",
    "@radix-ui/react-label": "^2.1.0",
    "@radix-ui/react-popover": "^1.1.2",
    "@radix-ui/react-progress": "^1.1.0",
    "@radix-ui/react-select": "^2.1.2",
    "@radix-ui/react-separator": "^1.1.0",
    "@radix-ui/react-slot": "^1.1.0",
    "@radix-ui/react-switch": "^1.1.1",
    "@radix-ui/react-tabs": "^1.1.1",
    "@radix-ui/react-toast": "^1.2.2",
    "@radix-ui/react-tooltip": "^1.1.3",
    "@t3-oss/env-nextjs": "^0.10.1",
    "ai": "^3.4.2",
    "autoprefixer": "^10.4.20",
    "bcryptjs": "^2.4.3",
    "cheerio": "^1.0.0",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "crawlee": "^3.10.2",
    "date-fns": "^4.1.0",
    "dotenv": "^17.2.2",
    "lucide-react": "^0.451.0",
    "next": "^15.1.3",
    "next-auth": "^5.0.0-beta.25",
    "next-sitemap": "^4.2.3",
    "openai": "^4.67.3",
    "playwright": "^1.49.1",
    "postcss": "^8.4.49",
    "prisma": "^5.22.0",
    "react": "^19.0.0",
    "react-dom": "^19.0.0",
    "react-hook-form": "^7.54.2",
    "tailwind-merge": "^2.5.4",
    "tailwindcss": "^3.4.15",
    "tailwindcss-animate": "^1.0.7",
    "ts-node": "^10.9.2",
    "zod": "^3.25.76"
  },
  "devDependencies": {
    "@playwright/test": "^1.49.1",
    "@types/bcryptjs": "^2.4.6",
    "@types/node": "^22.10.2",
    "@types/react": "^19.0.2",
    "@types/react-dom": "^19.0.2",
    "eslint": "^9.17.0",
    "eslint-config-next": "^15.1.3",
    "husky": "^9.1.7",
    "tsx": "^4.20.5",
    "typescript": "^5.7.2",
    "vitest": "^2.1.8"
  },
  "prisma": {
    "seed": "node prisma/seed.js"
  }
}
